@model RpshopingMvc.Models.goodsview
@{
    ViewBag.Title = "新增自营商品";
    Layout = "~/Views/Shared/_LayoutBackground.cshtml";

    var ckImgUpload = new RpshopingMvc.Models.Common.FileUpload
    {
        AutoInit = false,
        Max = 20,
        Mode = RpshopingMvc.Models.Common.FileUploadMode.ModalOnly,
        Name = "ckupload",
        Server = RpshopingMvc.Models.Common.UploadServer.QinQiu,// AiCard.Common.CommModels.UploadServer.QinQiu,
        Sortable = false,
        Type = RpshopingMvc.Models.Common.FileType.Image// AiCard.Common.CommModels.FileType.Image,
    };
}



<ol class="breadcrumb">
    <li><a href="@Url.Action("Index")">商品列表</a></li>
    <li>新增商品</li>
</ol>
<div class="roleGroupCreateEdit">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Brand", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GoodsName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GoodsName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GoodsName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.zkprice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.zkprice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.zkprice, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Specs, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Specs, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Specs, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ByIndex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ByIndex, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ByIndex, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GoodsState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.GoodsState, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GoodsState, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsRecommend, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.IsRecommend, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IsRecommend, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GetPath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetPath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetPath, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p>@Html.EditorFor(model => model.ImagePath)</p>
                    @*@Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SamllImages, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p>@Html.EditorFor(model => model.SamllImages)</p>
                    @*@Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SalesVolume, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p>@Html.EditorFor(model => model.SalesVolume)</p>
                    @Html.ValidationMessageFor(model => model.SalesVolume, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IncomeRatio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p>@Html.EditorFor(model => model.IncomeRatio)</p>
                    @Html.ValidationMessageFor(model => model.IncomeRatio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Brokerage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p>@Html.EditorFor(model => model.Brokerage)</p>
                    @Html.ValidationMessageFor(model => model.Brokerage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BrokerageExplain, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p>@Html.EditorFor(model => model.BrokerageExplain)</p>
                    @Html.ValidationMessageFor(model => model.BrokerageExplain, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Postage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p>@Html.EditorFor(model => model.Postage)</p>
                    @Html.ValidationMessageFor(model => model.Postage, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.DetailPath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea name="DetailPath" rows="10">@Model.DetailPath</textarea>
                    @Html.EditorFor(s => ckImgUpload)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="保存" class="btn btn-default" />
                    <a href="@Url.Action("Index")" class="btn btn-default" style="margin-left:60px;">返回</a>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@
    @Scripts.Render("~/Scripts/ckeditor/ckeditor.js")
    <script>
        var editor = CKEDITOR.replace('DetailPath', { height: 250 });
    </script>
}